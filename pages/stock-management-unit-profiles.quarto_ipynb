{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "476d0540",
   "metadata": {},
   "source": [
    "---\n",
    "title: \"Stock Management Unit Profiles\"\n",
    "format: \n",
    "  html:\n",
    "    css: ../assets/css/smu_profiles.css\n",
    "    toc: true\n",
    "    toc-depth: 2\n",
    "    code-fold: true\n",
    "execute:\n",
    "  echo: false\n",
    "  warning: false\n",
    "  message: false\n",
    "jupyter: python3\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "55b7bce9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from IPython.display import HTML, display\n",
    "import json\n",
    "\n",
    "# Read the Excel file\n",
    "try:\n",
    "    import os\n",
    "    file_path = '../assets/data/smu_profiles.xlsx'\n",
    "    # print(f\"Attempting to read file: {file_path}\")\n",
    "    # print(f\"File exists: {os.path.exists(file_path)}\")\n",
    "    # print(f\"File is readable: {os.access(file_path, os.R_OK)}\")\n",
    "    \n",
    "    df = pd.read_excel(file_path)\n",
    "    # print(f\"Successfully loaded {len(df)} SMU records\")\n",
    "except PermissionError as e:\n",
    "    # print(f\"Permission error: {e}\")\n",
    "    # print(\"The file might be open in Excel or another application.\")\n",
    "    # print(\"Attempting to read with alternative method...\")\n",
    "    try:\n",
    "        # Try reading with openpyxl engine explicitly\n",
    "        df = pd.read_excel(file_path, engine='openpyxl')\n",
    "        # print(f\"Successfully loaded {len(df)} SMU records using alternative method\")\n",
    "    except Exception as e2:\n",
    "        # print(f\"Alternative method also failed: {e2}\")\n",
    "        df = pd.DataFrame()\n",
    "except FileNotFoundError as e:\n",
    "    # print(f\"File not found: {e}\")\n",
    "    df = pd.DataFrame()\n",
    "except Exception as e:\n",
    "    # print(f\"Error loading data: {e}\")\n",
    "    # print(f\"Error type: {type(e).__name__}\")\n",
    "    df = pd.DataFrame()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ed18f09",
   "metadata": {
    "user_expressions": [
     {
      "expression": "len(df) if not df.empty else 0",
      "result": {
       "data": {
        "text/plain": "69"
       },
       "metadata": {},
       "status": "ok"
      }
     }
    ]
   },
   "source": [
    "## Overview\n",
    "\n",
    "This page contains profiles of **{{< meta title >}}** for Pacific salmon conservation. The data includes information on `{python} len(df) if not df.empty else 0` stock management units."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7edaa663",
   "metadata": {},
   "outputs": [],
   "source": [
    "#| output: asis\n",
    "\n",
    "# if not df.empty:\n",
    "#     # Clean up the data\n",
    "#     df = df.fillna('N/A')\n",
    "    \n",
    "#     # Get summary statistics\n",
    "#     species_counts = df['species'].value_counts() if 'species' in df.columns else pd.Series()\n",
    "    \n",
    "#     print(\"### Data Summary\")\n",
    "#     print(f\"- **Total SMUs:** {len(df)}\")\n",
    "#     if not species_counts.empty:\n",
    "#         print(f\"- **Species represented:** {len(species_counts)}\")\n",
    "#         for species, count in species_counts.head(5).items():\n",
    "#             print(f\"  - {species}: {count} SMUs\")\n",
    "# else:\n",
    "#     print(\"No data available.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f589d949",
   "metadata": {},
   "source": [
    "## Search and Filter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ac91fc28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"search-controls\">\n",
       "    <input type=\"text\" id=\"searchInput\" placeholder=\"Search SMUs...\" onkeyup=\"filterTable()\">\n",
       "    <select id=\"speciesFilter\" onchange=\"filterTable()\">\n",
       "        <option value=\"\">All Species</option>\n",
       "    </select>\n",
       "    <select id=\"regionFilter\" onchange=\"filterTable()\">\n",
       "        <option value=\"\">All Regions</option>\n",
       "    </select>\n",
       "</div>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import HTML\n",
    "\n",
    "# Always display search controls, even if no data\n",
    "display(HTML(\"\"\"\n",
    "<div class=\"search-controls\">\n",
    "    <input type=\"text\" id=\"searchInput\" placeholder=\"Search SMUs...\" onkeyup=\"filterTable()\">\n",
    "    <select id=\"speciesFilter\" onchange=\"filterTable()\">\n",
    "        <option value=\"\">All Species</option>\n",
    "    </select>\n",
    "    <select id=\"regionFilter\" onchange=\"filterTable()\">\n",
    "        <option value=\"\">All Regions</option>\n",
    "    </select>\n",
    "</div>\n",
    "\"\"\"))\n",
    "\n",
    "if df.empty:\n",
    "    display(HTML(\"\"\"\n",
    "    <p>No data to display.</p>\n",
    "    <div class=\"table-wrapper\" style=\"display: none;\">\n",
    "        <table id=\"smuTable\" class=\"display-table\">\n",
    "            <thead><tr><th>No Data</th></tr></thead>\n",
    "            <tbody></tbody>\n",
    "        </table>\n",
    "    </div>\n",
    "    \"\"\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58afad95",
   "metadata": {},
   "source": [
    "## SMU Data Table\n",
    "###### Click each row to view details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1c170841",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div class=\"table-wrapper\">\n",
       "<table id=\"smuTable\" class=\"display-table\">\n",
       "<thead>\n",
       "<tr>\n",
       "<th>SMU Name</th>\n",
       "<th>Species</th>\n",
       "<th>Region</th>\n",
       "<th>SMU Status</th>\n",
       "<th>Avg. Abundance</th>\n",
       "<th>Avg. Catch</th>\n",
       "<th>Avg. ER</th>\n",
       "</tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "<tr onclick=\"showDetails(0)\" class=\"clickable-row\">\n",
       "<td>ALSEK CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(1)\" class=\"clickable-row\">\n",
       "<td>ALSEK COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(2)\" class=\"clickable-row\">\n",
       "<td>ALSEK SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(3)\" class=\"clickable-row\">\n",
       "<td>CENTRAL COAST CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>Atnarko: 0.45</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(4)\" class=\"clickable-row\">\n",
       "<td>CENTRAL COAST CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.4</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(5)\" class=\"clickable-row\">\n",
       "<td>CENTRAL COAST COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.1</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(6)\" class=\"clickable-row\">\n",
       "<td>CENTRAL COAST PINK SALMON</td>\n",
       "<td>Pink</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.2</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(7)\" class=\"clickable-row\">\n",
       "<td>CENTRAL COAST SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(8)\" class=\"clickable-row\">\n",
       "<td>ECVI/MAINLAND PINK SALMON - EVEN</td>\n",
       "<td>Pink</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(9)\" class=\"clickable-row\">\n",
       "<td>ECVI/MAINLAND PINK SALMON - ODD</td>\n",
       "<td>Pink</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(10)\" class=\"clickable-row\">\n",
       "<td>ECVI/MAINLAND SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(11)\" class=\"clickable-row\">\n",
       "<td>FRASER CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Cautious</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(12)\" class=\"clickable-row\">\n",
       "<td>FRASER FALL RUN 41 CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>GR</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.25</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(13)\" class=\"clickable-row\">\n",
       "<td>FRASER PINK SALMON - ODD</td>\n",
       "<td>Pink</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Healthy</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.5533531549388834</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(14)\" class=\"clickable-row\">\n",
       "<td>FRASER SOCKEYE SALMON - EARLY STUART</td>\n",
       "<td>Sockeye</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Fraser Sockeye - Early Stuart: 1 Red</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.21084950841930228</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(15)\" class=\"clickable-row\">\n",
       "<td>FRASER SOCKEYE SALMON - EARLY SUMMER</td>\n",
       "<td>Sockeye</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Fraser Sockeye - Early Summer: 2 Red\n",
       "4 amber\n",
       "3 amber/green\n",
       "1 green</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.3044679073011699</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(16)\" class=\"clickable-row\">\n",
       "<td>FRASER SOCKEYE SALMON - LATE</td>\n",
       "<td>Sockeye</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Critical</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.3743142281046951</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(17)\" class=\"clickable-row\">\n",
       "<td>FRASER SOCKEYE SALMON - SUMMER</td>\n",
       "<td>Sockeye</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Critical</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.3543114665931571</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(18)\" class=\"clickable-row\">\n",
       "<td>FRASER SPRING RUN 42 CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>RED</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.22</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(19)\" class=\"clickable-row\">\n",
       "<td>FRASER SPRING RUN 52 CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>DD/RED</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.3</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(20)\" class=\"clickable-row\">\n",
       "<td>FRASER SUMMER RUN 41 CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>DD/GR</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.45</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(21)\" class=\"clickable-row\">\n",
       "<td>FRASER SUMMER RUN 52 CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>DD/AMB/RED</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.3</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(22)\" class=\"clickable-row\">\n",
       "<td>HAIDA GWAII CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(23)\" class=\"clickable-row\">\n",
       "<td>HAIDA GWAII CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(24)\" class=\"clickable-row\">\n",
       "<td>HAIDA GWAII COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.1</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(25)\" class=\"clickable-row\">\n",
       "<td>HAIDA GWAII PINK SALMON</td>\n",
       "<td>Pink</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(26)\" class=\"clickable-row\">\n",
       "<td>HAIDA GWAII SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(27)\" class=\"clickable-row\">\n",
       "<td>INNER SOUTH COAST CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>Cautious</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(28)\" class=\"clickable-row\">\n",
       "<td>INTERIOR FRASER COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Cautious</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.11</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(29)\" class=\"clickable-row\">\n",
       "<td>JOHNSTONE STRAIT/MAINLAND INLET COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(30)\" class=\"clickable-row\">\n",
       "<td>LOWER FRASER COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.15</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(31)\" class=\"clickable-row\">\n",
       "<td>LOWER GEORGIA STRAIT CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>TBD</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.63</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(32)\" class=\"clickable-row\">\n",
       "<td>MAINLAND INLET CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(33)\" class=\"clickable-row\">\n",
       "<td>MIDDLE GEORGIA STRAIT CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(34)\" class=\"clickable-row\">\n",
       "<td>NASS CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(35)\" class=\"clickable-row\">\n",
       "<td>NASS CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(36)\" class=\"clickable-row\">\n",
       "<td>NASS COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.12</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(37)\" class=\"clickable-row\">\n",
       "<td>NASS PINK SALMON</td>\n",
       "<td>Pink</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Healthy</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>Nass: 0.19</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(38)\" class=\"clickable-row\">\n",
       "<td>NASS SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Healthy</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>Nass: 0.42</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(39)\" class=\"clickable-row\">\n",
       "<td>OKANAGAN CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>Critical</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(40)\" class=\"clickable-row\">\n",
       "<td>OKANAGAN SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>FRASER AND INTERIOR</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(41)\" class=\"clickable-row\">\n",
       "<td>PORCUPINE CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(42)\" class=\"clickable-row\">\n",
       "<td>PORCUPINE CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(43)\" class=\"clickable-row\">\n",
       "<td>PORCUPINE COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(44)\" class=\"clickable-row\">\n",
       "<td>RIVERS/SMITH SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>Rivers: 0.05</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(45)\" class=\"clickable-row\">\n",
       "<td>SKEENA - NASS CHUM COASTAL</td>\n",
       "<td>Chum</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(46)\" class=\"clickable-row\">\n",
       "<td>SKEENA CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>Skeena: 0.44</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(47)\" class=\"clickable-row\">\n",
       "<td>SKEENA CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(48)\" class=\"clickable-row\">\n",
       "<td>SKEENA COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.54</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(49)\" class=\"clickable-row\">\n",
       "<td>SKEENA PINK SALMON</td>\n",
       "<td>Pink</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Healthy</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>Skeena: 0.49</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(50)\" class=\"clickable-row\">\n",
       "<td>SKEENA SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>NORTH COAST</td>\n",
       "<td>Healthy</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.55</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(51)\" class=\"clickable-row\">\n",
       "<td>STIKINE CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(52)\" class=\"clickable-row\">\n",
       "<td>STIKINE COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(53)\" class=\"clickable-row\">\n",
       "<td>STIKINE SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>Healthy</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(54)\" class=\"clickable-row\">\n",
       "<td>STRAIT OF GEORGIA COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.06</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(55)\" class=\"clickable-row\">\n",
       "<td>TAKU CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(56)\" class=\"clickable-row\">\n",
       "<td>TAKU COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(57)\" class=\"clickable-row\">\n",
       "<td>TAKU SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(58)\" class=\"clickable-row\">\n",
       "<td>TRANSBOUNDARY CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(59)\" class=\"clickable-row\">\n",
       "<td>TRANSBOUNDARY PINK SALMON</td>\n",
       "<td>Pink</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(60)\" class=\"clickable-row\">\n",
       "<td>UPPER GEORGIA STRAIT CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>DD</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.39</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(61)\" class=\"clickable-row\">\n",
       "<td>WCVI - BARKLEY SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>Uncertain</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>GCL: 0.05</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(62)\" class=\"clickable-row\">\n",
       "<td>WCVI - OTHER SOCKEYE SALMON</td>\n",
       "<td>Sockeye</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.05</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(63)\" class=\"clickable-row\">\n",
       "<td>WCVI CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>Critical</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.65</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(64)\" class=\"clickable-row\">\n",
       "<td>WCVI CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.2</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(65)\" class=\"clickable-row\">\n",
       "<td>WCVI COHO SALMON</td>\n",
       "<td>Coho</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>0.11</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(66)\" class=\"clickable-row\">\n",
       "<td>WCVI PINK SALMON</td>\n",
       "<td>Pink</td>\n",
       "<td>SOUTH COAST</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(67)\" class=\"clickable-row\">\n",
       "<td>YUKON CHINOOK SALMON</td>\n",
       "<td>Chinook</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>Critical</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "<tr onclick=\"showDetails(68)\" class=\"clickable-row\">\n",
       "<td>YUKON CHUM SALMON</td>\n",
       "<td>Chum</td>\n",
       "<td>YUKON TRANSBOUNDARY</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "<td>N/A</td>\n",
       "</tr>\n",
       "</tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if not df.empty:\n",
    "    # Select key columns for the main table\n",
    "    display_columns = []\n",
    "    possible_columns = [\n",
    "        'SMU Name', 'Species', 'Region', \n",
    "        'No. CUs', 'SMU Status',\n",
    "        'Avg. Abundance', 'Avg. Catch', 'Avg. ER'\n",
    "    ]\n",
    "    \n",
    "    for col in possible_columns:\n",
    "        if col in df.columns:\n",
    "            display_columns.append(col)\n",
    "    \n",
    "    if display_columns:\n",
    "        display_df = df[display_columns].copy()\n",
    "        \n",
    "        # Debug: print column info\n",
    "        # print(f\"Display columns: {display_columns}\")\n",
    "        # print(f\"Data shape: {display_df.shape}\")\n",
    "        \n",
    "        # Create HTML table with proper styling and IDs\n",
    "        html_table = '<div class=\"table-wrapper\">\\n'\n",
    "        html_table += '<table id=\"smuTable\" class=\"display-table\">\\n'\n",
    "        html_table += '<thead>\\n<tr>\\n'\n",
    "        \n",
    "        for col in display_columns:\n",
    "            html_table += f'<th>{col}</th>\\n'\n",
    "        html_table += '</tr>\\n</thead>\\n<tbody>\\n'\n",
    "        \n",
    "        for idx, row in display_df.iterrows():\n",
    "            html_table += f'<tr onclick=\"showDetails({idx})\" class=\"clickable-row\">\\n'\n",
    "            for col in display_columns:\n",
    "                # Escape HTML characters and handle NaN values\n",
    "                value = str(row[col]) if pd.notna(row[col]) else 'N/A'\n",
    "                # Basic HTML escaping\n",
    "                value = value.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;').replace('\"', '&quot;')\n",
    "                html_table += f'<td>{value}</td>\\n'\n",
    "            html_table += '</tr>\\n'\n",
    "        \n",
    "        html_table += '</tbody>\\n</table>\\n</div>'\n",
    "        \n",
    "        # Debug: print first few characters of HTML\n",
    "        # print(f\"HTML table preview: {html_table[:200]}...\")\n",
    "        \n",
    "        display(HTML(html_table))\n",
    "    else:\n",
    "        display(HTML(\"<p>No suitable columns found for display.</p>\"))\n",
    "else:\n",
    "    display(HTML(\"<p>No data to display.</p>\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "89be3bf4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div id=\"detailView\" style=\"display: none;\">\n",
       "    <button onclick=\"hideDetails()\" class=\"back-button\">← Back to Table</button>\n",
       "    <div id=\"detailContent\"></div>\n",
       "</div>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Always display the detail view HTML elements\n",
    "display(HTML('''\n",
    "<div id=\"detailView\" style=\"display: none;\">\n",
    "    <button onclick=\"hideDetails()\" class=\"back-button\">← Back to Table</button>\n",
    "    <div id=\"detailContent\"></div>\n",
    "</div>\n",
    "'''))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "04d5af86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<script>\n",
       "const smuData = [{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chinook\",\"SMU Name\":\"ALSEK CHINOOK SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Klukshu: S-R, Alsek: S-R\",\"USR\":\"Klukshu: 1000 ESC-MSY, Alsek: 4700 ESC-MSY\",\"RR\":null,\"FRP-L\":\"Alsek Chinook: 3500.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Klukshu: Terminal: F-ESC, Alsek: Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Coho\",\"SMU Name\":\"ALSEK COHO SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Klukshu: UND\",\"USR\":\"Klukshu: UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Klukshu: Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Sockeye\",\"SMU Name\":\"ALSEK SOCKEYE SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Klukshu: S-R, Alsek: S-R\",\"USR\":\"Klukshu: 9700 ESC-MSY, Alsek: 29700 ESC-MSY\",\"RR\":null,\"FRP-L\":\"Alsek Sockeye: 24000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Klukshu: Terminal: F-ESC, Alsek: Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"CENTRAL COAST CHINOOK SALMON\",\"No. Cus\":8,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"Atnarko: UND\",\"USR\":\"Atnarko: 5000 ESC-MSY\",\"RR\":\"No Healthy, Cautious, Critical or Uncertain Removal Zone has been determined.\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"Atnarko: 0.45\",\"Harvest Control Rules\":\"Atnarko: mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"CENTRAL COAST CHUM SALMON\",\"No. Cus\":9,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-MEG\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.4\",\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"CENTRAL COAST COHO SALMON\",\"No. Cus\":8,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":\"No removal reference for Health, Cautious,  Critical, or Uncertain zones. The stock is harvested within approved rates\\/levels\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.1\",\"Harvest Control Rules\":\"Harvest decision rules that aim to control exploitation have not been developed\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"CENTRAL COAST PINK SALMON\",\"No. Cus\":5,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.2\",\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"CENTRAL COAST SOCKEYE SALMON\",\"No. Cus\":78,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"ECVI\\/MAINLAND PINK SALMON - EVEN\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":null,\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"ECVI\\/MAINLAND PINK SALMON - ODD\",\"No. Cus\":4,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"2 years\",\"SMU Status\":null,\"LRP\":null,\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"ECVI\\/MAINLAND SOCKEYE SALMON\",\"No. Cus\":18,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"The smolts migrate north through Johnstone Strait to the North Pacific Ocean. During their first year at sea, Sockeye Salmon from British Columbia have been caught along the Alaska Peninsula during summer and fall, and near the Aleutian Islands during win\",\"Age at Return\":\"FULMORE: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., HEYDON: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., KAKWEIKEN: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., LOOSE: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., MACKENZIE: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., PHILLIPS: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., SAKINAW: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., TZOONIE: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., VILLAGE BAY: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., IDA\\/BONANZA: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., NAHWITTI: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., NIMPKISH: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., QUATSE: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., SCHOEN: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., SHUSHARTIE: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., WOSS: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., NAHWITTI: 2 years, PACK: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn., VERNON: Most Sakinaw Sockeye Salmon mature after four years, after spending two years rearing in the lake and two years at sea before returning to Sakinaw Lake to spawn.\",\"SMU Status\":null,\"LRP\":\"2440\",\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chum\",\"SMU Name\":\"FRASER CHUM SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Cautious\",\"LRP\":\"T-S\",\"USR\":null,\"RR\":\"RR in the Healthy Zone: When terminal run size is 916,000 to 1,050,000: commercial catch not to exceed 10% of the terminal run size. When terminal run size is >1,050,000: commercial catch not to exceed 15% of the terminal run size. RR in the Cautious Zone\",\"FRP-L\":\"Fraser River Chum: 500000.0\",\"FRP-U\":\"Fraser River Chum: 1050000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Harvest decision rules have been  developed and implemented, but not evaluated.Harvest rate at or below removal reference.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chinook\",\"SMU Name\":\"FRASER FALL RUN 41 CHINOOK SALMON\",\"No. Cus\":2,\"Run Timing\":\"FALL\",\"Freshwater Life History\":\"Migrate to the Fraser estuary immediately following emergence. Harrison River Chinook Salmon rear in the Fraser estuary from March until June, where the mid-intertidal (e.g. eelgrass meadows) and emergent vegetation (e.g. sedges, rushes, and riparian tree\",\"Ocean Migration\":\"Ocean-type FRC rear in coastal waters for most of their life at sea and typically do not disperse more than 1,000 km from the Fraser River.\",\"Age at Return\":\"4 years\",\"SMU Status\":\"GR\",\"LRP\":\"S-R\",\"USR\":\"ESC-MSY\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.25\",\"Harvest Control Rules\":\"mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Pink\",\"SMU Name\":\"FRASER PINK SALMON - ODD\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":\"Migrate to ocean in spring as fry\",\"Ocean Migration\":\"Northern Gulf of Alaska\",\"Age at Return\":\"Obligate two-year lifecycle\",\"SMU Status\":\"Healthy\",\"LRP\":\"UND\",\"USR\":\"Very high probability (>99%) that current (2023) spawner (escapement) abundance is above the median upper stock reference (USR) and both short and longer term escapement trends are increasing. 80% Smsy=4.6M spawners (80% CI: 3.6 - 6.1M).\",\"RR\":\"UMSY = 56% (80% CI: 47% - 63%). Compare to annual estimates of exploitation rate\",\"FRP-L\":\"FRP-LOWER Sgen = 1.7M spawners (80% CI: 1.1M \\u2013 2.7M). Compare to full posterior distribution of spawners in last year of escapement\",\"FRP-U\":\"Fraser Pink: 20000000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.5533531549388834\",\"Harvest Control Rules\":\"The current harvest control rule (HCR) for Fraser Pink salmon was first implemented in 1987. It consists of three management zones: 1) at run sizes below 7.059 million pinks, the the maximum allowable exploitation rate increases from 0% when there are no Pink salmon to 15% at 7.059 million Pinks, 2) at run sizes between 7.059 and 20 million Pinks, there is a fixed escapement goal of 6 million spawners, and 3) at run sizes greater than 20 million Pinks, the maximum exploitation rate is 70%.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Sockeye\",\"SMU Name\":\"FRASER SOCKEYE SALMON - EARLY STUART\",\"No. Cus\":1,\"Run Timing\":\"EARLY STUART\",\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Fraser Sockeye - Early Stuart: 1 Red\",\"LRP\":\"10000.0 S-R\",\"USR\":\"ESC-MSY\",\"RR\":\"Fraser Sockeye - Early Stuart: 0.6\",\"FRP-L\":\"Fraser Sockeye - Early Stuart: 108000.0\",\"FRP-U\":\"Fraser Sockeye - Early Stuart: 270000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.21084950841930228\",\"Harvest Control Rules\":\"mixed: V-HR\\/CONT, Terminal: V-ER\\/CONT\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Sockeye\",\"SMU Name\":\"FRASER SOCKEYE SALMON - EARLY SUMMER\",\"No. Cus\":12,\"Run Timing\":\"SUMMER\",\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Fraser Sockeye - Early Summer: 2 Red\\n4 amber\\n3 amber\\/green\\n1 green\",\"LRP\":\"54000.0 S-R\",\"USR\":\"ESC-MSY\",\"RR\":\"Fraser Sockeye - Early Summer: 0.6\",\"FRP-L\":\"Fraser Sockeye - Early Summer: 100000.0\",\"FRP-U\":\"Fraser Sockeye - Early Summer: 250000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.3044679073011699\",\"Harvest Control Rules\":\"mixed: V-HR\\/CONT, Terminal: V-ER\\/CONT\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Sockeye\",\"SMU Name\":\"FRASER SOCKEYE SALMON - LATE\",\"No. Cus\":6,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Critical\",\"LRP\":\"180000.0 S-R\",\"USR\":\"601000\",\"RR\":\"RR Healthy Zone: A 50% Total Allowable Mortality Cap has been identified for this stock that varies annually and is published in the annual IFMP. RR Cautious Zone: An abundance based control rule has been developed for this stock that varies with aggregat\",\"FRP-L\":\"Fraser Sockeye - Late: 300000.0\",\"FRP-U\":\"Fraser Sockeye - Late: 750000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.3743142281046951\",\"Harvest Control Rules\":\"Harvest decision rules have been developed, implemented and evaluated. An abundance based control rule has been developed for this stock. It is managed based upon in-season abundance estimates. Refer to Pestal, G., et al. 2011. Updated Methods for Assessing Harvest Rules for Fraser River Sockeye Salmon (Oncorhynchus Nerka). CSAS Res. Doc. 2011\\/133. Harvest rate at or below removal reference.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Sockeye\",\"SMU Name\":\"FRASER SOCKEYE SALMON - SUMMER\",\"No. Cus\":7,\"Run Timing\":\"SUMMER\",\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Critical\",\"LRP\":\"59000.0 S-R\",\"USR\":\"2100000\",\"RR\":\"RR Healthy Zone: A 50% Total Allowable Mortality Cap has been identified for this stock.  RR Cautious Zone: An abundance based control rule has been developed for this stock. . RR Critical Zone: A low abundance exploitation rate (LAER) of 10% has been ide\",\"FRP-L\":\"Fraser Sockeye - Summer: 1250000.0\",\"FRP-U\":\"Fraser Sockeye - Summer: 3125000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.3543114665931571\",\"Harvest Control Rules\":\"Harvest decision rules have been developed, implemented and evaluated\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chinook\",\"SMU Name\":\"FRASER SPRING RUN 42 CHINOOK SALMON\",\"No. Cus\":2,\"Run Timing\":\"SPRING\",\"Freshwater Life History\":\"After one year in freshwater, juvenile stream-type Chinook Salmon from the interior and lower Fraser systems migrate downstream in the spring and early summer and enter the Strait of Georgia. Nearly all FRC spend the first few months in the Salish Sea and\",\"Ocean Migration\":\"Stream-type FRC tend to have the broadest marine distribution and are generally found more northerly and westerly than ocean-type variants, and catches have been reported as far north as the Bering Sea.In general, stream-type Chinook Salmon spend their fi\",\"Age at Return\":\"4 years\",\"SMU Status\":\"RED\",\"LRP\":\"LRP for CK-17= 4,000; CK-16= 1,000.\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.22\",\"Harvest Control Rules\":\"Fraser Spring 42 SMU, management measures are in place to \\u2018minimize\\u2019 incidental harvest of the stock. However, no specific stock objectives are set for either escapement or exploitation rate and it is unclear how harvest is adjusted for changes in either stock status or impacting fisheries. There is no specific harvest control rule.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chinook\",\"SMU Name\":\"FRASER SPRING RUN 52 CHINOOK SALMON\",\"No. Cus\":5,\"Run Timing\":\"SPRING\",\"Freshwater Life History\":\"After one year in freshwater, juvenile stream-type Chinook Salmon from the interior and lower Fraser systems migrate downstream in the spring and early summer and enter the Strait of Georgia. Nearly all FRC spend the first few months in the Salish Sea and\",\"Ocean Migration\":\"Stream-type FRC tend to have the broadest marine distribution and are generally found more northerly and westerly than ocean-type variants, and catches have been reported as far north as the Bering Sea.In general, stream-type Chinook Salmon spend their fi\",\"Age at Return\":\"5 years\",\"SMU Status\":\"DD\\/RED\",\"LRP\":\"LRP for CK-4,8,18= 1,000. LRP for CK-10,12= 5,300\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.3\",\"Harvest Control Rules\":\"Spring 5.2 and Summer 5.2 SMUs, the harvest control rule is applied to the combined stock aggregate. The rule is a variable escapement target strategy: allowable harvest increases with increasing aggregate stock abundance relative to three zones. Zone 3 (greater than 85,000 terminal return): Manage to meet expected spawner abundance of at least 60,000 spawners in order to promote populations rebuilding towards estimated MSY levels. Zone 2 (45,000 to 85,000 terminal return): Manage to an escapement goal of at least 30,000 and up to 60,000 to avoid population declines. Zone 1 (below or equal to 45,000 terminal return): Expected spawner abundance will likely be 30,000 or less. Highest level of management restrictions used to maximize escapement.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chinook\",\"SMU Name\":\"FRASER SUMMER RUN 41 CHINOOK SALMON\",\"No. Cus\":4,\"Run Timing\":\"SUMMER\",\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"MARIA SLOUGH_SU_0.3: 4 years, SOUTH THOMPSON_SU_0.3: 4 years, SHUSWAP RIVER_SU_0.3: 4 years, UPPER ADAMS RIVER_SU_1.x: 5 years\",\"SMU Status\":\"DD\\/GR\",\"LRP\":\"LRP= 1,000 for CK-07, LRP= 2,100 for CK-15; LRP= 15,300 for CK-03; LRP= 23,600 for CK-13\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.45\",\"Harvest Control Rules\":\"mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chinook\",\"SMU Name\":\"FRASER SUMMER RUN 52 CHINOOK SALMON\",\"No. Cus\":6,\"Run Timing\":\"SUMMER\",\"Freshwater Life History\":\"After one year in freshwater, juvenile stream-type Chinook Salmon from the interior and lower Fraser systems migrate downstream in the spring and early summer and enter the Strait of Georgia. Nearly all FRC spend the first few months in the Salish Sea and\",\"Ocean Migration\":\"Stream-type FRC tend to have the broadest marine distribution and are generally found more northerly and westerly than ocean-type variants, and catches have been reported as far north as the Bering Sea.In general, stream-type Chinook Salmon spend their fi\",\"Age at Return\":\"5 years\",\"SMU Status\":\"DD\\/AMB\\/RED\",\"LRP\":\"LRP for CK-5,6,9,14= 1,000. LRP for CK-11= 5,800. LRP for CK-19=1,800.\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.3\",\"Harvest Control Rules\":\"Spring 5.2 and Summer 5.2 SMUs, the harvest control rule is applied to the combined stock aggregate. The rule is a variable escapement target strategy: allowable harvest increases with increasing aggregate stock abundance relative to three zones. Zone 3 (greater than 85,000 terminal return): Manage to meet expected spawner abundance of at least 60,000 spawners in order to promote populations rebuilding towards estimated MSY levels. Zone 2 (45,000 to 85,000 terminal return): Manage to an escapement goal of at least 30,000 and up to 60,000 to avoid population declines. Zone 1 (below or equal to 45,000 terminal return): Expected spawner abundance will likely be 30,000 or less. Highest level of management restrictions used to maximize escapement.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"HAIDA GWAII CHINOOK SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":null,\"USR\":null,\"RR\":\"No Healthy, Cautious, Critical or Uncertain Removal Zone has been determined\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"HAIDA GWAII CHUM SALMON\",\"No. Cus\":5,\"Run Timing\":null,\"Freshwater Life History\":\"Lake-type sockeye rear along the continental shelf upon entering the ocean in the spring (Tucker et al 2009)\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-MEG\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"HAIDA GWAII COHO SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":\"No removal reference for Health, Cautious,  Critical, or Uncertain zones. The stock is harvested within approved rates\\/levels\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.1\",\"Harvest Control Rules\":\"Harvest decision rules that aim to control exploitation have not been developed\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"HAIDA GWAII PINK SALMON\",\"No. Cus\":6,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"HAIDA GWAII SOCKEYE SALMON\",\"No. Cus\":10,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"INNER SOUTH COAST CHUM SALMON\",\"No. Cus\":7,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"2 years\",\"SMU Status\":\"Cautious\",\"LRP\":\"T-S\",\"USR\":\"ESC-MEG\",\"RR\":\"No removal reference for Cautious, Critical or Uncertain zones.  RR for Healthy Zone: 20% Exploitation Rate in mixed stock fisheries (FSC, Rec, Commercial). A removal reference has not been identified for the zone the stock currently occupies (2023).\",\"FRP-L\":\"Inner South Coast Chum - Mixed stock fisheries: 1000000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Harvest decision rules have been developed and implemented, but not evaluated. The stock is harvested within approved rates\\/levels.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Coho\",\"SMU Name\":\"INTERIOR FRASER COHO SALMON\",\"No. Cus\":5,\"Run Timing\":null,\"Freshwater Life History\":\"IFC fry rear mainly in small tributaries, and are largely absent from mainstem habitats in larger streams. Typically after one year in freshwater, juvenile IFC migrate down the Fraser River in the spring and early summer. They remain in the highly develop\",\"Ocean Migration\":\"After seawater entry, they spend the remaining 18 month oceanic residence primarily in coastal waters of the North Pacific. The marine distribution of habitat is thought to be primarily along the coast of British Columbia. Just under half (on average) of\",\"Age at Return\":\"Eighty-eight percent of IFC complete a 3-year life cycle with the remaining 12% completing a 4-year life cycle on average\",\"SMU Status\":\"Cautious\",\"LRP\":\"CU status-based LRPs use the proportion of CUs within an SMU that are above the WSP \\u2018Red\\u2019 zone.\",\"USR\":\"80% SMSY\",\"RR\":\"UMSY\",\"FRP-L\":\"LRP= 1,000 for Fraser Canyon; LRP= 1,400 for Lower Thompson; LRP=1,800 for Interior Fraser; LRP=2,300 for South Thompson; LRP=2,600 for North Thompson. (the Sustainability Survey for Fisheries 2023 states that there is no LRP)\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.11\",\"Harvest Control Rules\":\"Established in 2002 and most recently updated in 2019, the Southern Coho Management Plan in Chapter 5 of the PST identifies Coho Exploitation Rate for U.S. and Canadian Coho fisheries based on the stock status of the Interior Fraser Coho SMU (i.e. \\u2018Low\\u2019, \\u2018Moderate\\u2019, and \\u2018Abundant\\u2019), as described previously. Under Chapter 5, total Exploitation Rate caps are set to 20%, 30%, and 45% according to the \\u2018Low\\u2019, \\u2018Moderate\\u2019, and \\u2018Abundant\\u2019 statuses, respectively.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"JOHNSTONE STRAIT\\/MAINLAND INLET COHO SALMON\",\"No. Cus\":4,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":null,\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Coho\",\"SMU Name\":\"LOWER FRASER COHO SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"H-CO\",\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.15\",\"Harvest Control Rules\":\"mixed: V-ER\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"LOWER GEORGIA STRAIT CHINOOK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"3 years\",\"SMU Status\":\"TBD\",\"LRP\":\"LRP= 3,413 Cowichan River fall run unenhanced\",\"USR\":\"ESC-MSY\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.63\",\"Harvest Control Rules\":\"mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"MAINLAND INLET CHINOOK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"SOUTHERN MAINLAND-SOUTHERN FJORDS_FA_0.x: 4 years, HOMATHKO_SU_x.x: 5 years, KLINAKLINI_SU_1.3: 5 years\",\"SMU Status\":null,\"LRP\":null,\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"MIDDLE GEORGIA STRAIT CHINOOK SALMON\",\"No. Cus\":4,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"4 years\",\"SMU Status\":null,\"LRP\":\"LRP= 7,193 Puntledge and Big Qualicum rivers fall run enhanced\",\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"NASS CHINOOK SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"Nass: UND\",\"USR\":\"Nass: 10000 UND\",\"RR\":\"No Healthy, Cautious, Critical or Uncertain Removal Zone has been determined\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Nass: mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"NASS CHUM SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-MEG\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"NASS COHO SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"H-CO\",\"USR\":\"40000\",\"RR\":\"No removal reference for Health, Cautious,  Critical, or Uncertain zones. The stock is harvested within approved rates\\/levels\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.12\",\"Harvest Control Rules\":\"Harvest decision rules that aim to control exploitation have not been developed\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"NASS PINK SALMON\",\"No. Cus\":5,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Healthy\",\"LRP\":\"Nass: UND\",\"USR\":\"Nass: 225000\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"Nass: 0.19\",\"Harvest Control Rules\":\"Harvest decision rules have been developed and implemented, but not evaluated.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"NASS SOCKEYE SALMON\",\"No. Cus\":8,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Healthy\",\"LRP\":\"Nass: UND, Meziadin: UND\",\"USR\":\"200,000 fish\",\"RR\":null,\"FRP-L\":\"Nass Sockeye: 100000.0\",\"FRP-U\":\"Nass Sockeye: 200000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"Nass: 0.42\",\"Harvest Control Rules\":\"Harvest decision rules have been developed, implemented and evaluated.The stock is harvested within approved rates\\/levels\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Chinook\",\"SMU Name\":\"OKANAGAN CHINOOK SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":\"Migrate to the sea after only two to five months in freshwater.\",\"Ocean Migration\":null,\"Age at Return\":\"4 years\",\"SMU Status\":\"Critical\",\"LRP\":\"As of 2023, the SMU is below the LRP with high probability, as all available estimates place the number of natural-origin spawners well below 1,000, and the index of abundance shows a declining trend over the last 12 years (2012\\u20132023)\\u2014placing the stock in the Critical Zone.\",\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Harvest decisions rules have not been developed.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"FRASER AND INTERIOR\",\"Species\":\"Sockeye\",\"SMU Name\":\"OKANAGAN SOCKEYE SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Okanagan Sockeye salmon SMU, which contains one CU that is not currently Red status, is considered to be above the Limit Reference Point (LRP) under the Fish Stock Provisions of the modernized Fisheries Act.\",\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chinook\",\"SMU Name\":\"PORCUPINE CHINOOK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chum\",\"SMU Name\":\"PORCUPINE CHUM SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Fishing Branch?: T-S\",\"USR\":\"Fishing Branch?: ESC-EXP\",\"RR\":null,\"FRP-L\":\"Porcupine Chum: 22000.0\",\"FRP-U\":\"Porcupine Chum: 49000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Fishing Branch?: Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Coho\",\"SMU Name\":\"PORCUPINE COHO SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"RIVERS\\/SMITH SOCKEYE SALMON\",\"No. Cus\":5,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Rivers: UND, Smith: UND\",\"USR\":\"Rivers: ESC-EXP, Smith: ESC-EXP\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"Rivers: 0.05\",\"Harvest Control Rules\":\"Rivers: Terminal: F-ESC, Smith: Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"SKEENA - NASS CHUM COASTAL\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":null,\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"SKEENA CHINOOK SALMON\",\"No. Cus\":12,\"Run Timing\":null,\"Freshwater Life History\":\"Lake-type sockeye rear along the continental shelf upon entering the ocean in the spring (Tucker et al 2009)\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"Skeena: S-R\",\"USR\":\"Skeena: UND\",\"RR\":\"No Healthy, Cautious, Critical or Uncertain Removal Zone has been determined\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"Skeena: 0.44\",\"Harvest Control Rules\":\"Skeena: mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"SKEENA CHUM SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-MEG\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"SKEENA COHO SALMON\",\"No. Cus\":4,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":\"No removal reference for Health, Cautious,  Critical, or Uncertain zones. The stock is harvested within approved rates\\/levels\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.54\",\"Harvest Control Rules\":\"Harvest decision rules that aim to control exploitation have not been developed\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"SKEENA PINK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":\"Healthy\",\"LRP\":\"Skeena: UND\",\"USR\":\"Skeena: 1000000\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"Skeena: 0.49\",\"Harvest Control Rules\":\"Harvest decision rules have been developed and implemented, but not evaluated.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"NORTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"SKEENA SOCKEYE SALMON\",\"No. Cus\":32,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Healthy\",\"LRP\":\"240000.0 S-R\",\"USR\":\"900,000 fish\",\"RR\":\"None calculated as all fisheries including FSC are closed.\",\"FRP-L\":\"Skeena Sockeye: 400000.0\",\"FRP-U\":\"Skeena Sockeye: 900000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.55\",\"Harvest Control Rules\":\"Harvest decision rules have been developed and implemented, but not evaluated.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chinook\",\"SMU Name\":\"STIKINE CHINOOK SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"Stikine: S-R, Little Tahtlan: S-R\",\"USR\":\"Stikine: 17400 ESC-MSY, Little Tahtlan: 3300 ESC-MSY\",\"RR\":null,\"FRP-L\":\"Stikine Chinook: 14000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Stikine: Terminal: F-ESC, Little Tahtlan: Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Coho\",\"SMU Name\":\"STIKINE COHO SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"ESC-EXP\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Sockeye\",\"SMU Name\":\"STIKINE SOCKEYE SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Healthy\",\"LRP\":\"Mainstem : S-R, Tahtlan: S-R\",\"USR\":\"Mainstem : 30000 ESC-MSY, Tahtlan: 24000 ESC-MSY\",\"RR\":null,\"FRP-L\":\"Stikine Sockeye: 38000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Harvest decision rules have been  developed, implemented and evaluated. Tables 13-6.23 and 13-7.24 in the IFMP identify the Canadian management reference points for Tahltan Lake and mainstem Sockeye salmon, respectively. Since the FN fishery occurs mostly upstream of the mainstem Sockeye spawning areas, it is not generally affected by conservation concerns for this stock as indicated in Table 13-7.24.Harvest decision rules are reviewed and evaluated annually via the Stikine River Salmon Management Advisory Committee comprising DFO, Tahltan Central Government, and stakeholders (primarily commercial fishers).\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"STRAIT OF GEORGIA COHO SALMON\",\"No. Cus\":4,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"H-CO\",\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.06\",\"Harvest Control Rules\":\"mixed: V-ER, Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chinook\",\"SMU Name\":\"TAKU CHINOOK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"S-R\",\"USR\":\"25500 ESC-MSY\",\"RR\":null,\"FRP-L\":\"Taku Chinook: 19000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Coho\",\"SMU Name\":\"TAKU COHO SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"40000.0 UND\",\"USR\":\"70000 ESC-EXP\",\"RR\":null,\"FRP-L\":\"Taku Coho: 50000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Sockeye\",\"SMU Name\":\"TAKU SOCKEYE SALMON\",\"No. Cus\":4,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"75000 ESC-EXP\",\"RR\":null,\"FRP-L\":\"Taku Sockeye: 70000.0\",\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chum\",\"SMU Name\":\"TRANSBOUNDARY CHUM SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-EXP\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: V-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Pink\",\"SMU Name\":\"TRANSBOUNDARY PINK SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"ESC-EXP\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: V-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"UPPER GEORGIA STRAIT CHINOOK SALMON\",\"No. Cus\":1,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"4 years\",\"SMU Status\":\"DD\",\"LRP\":\"H-CN\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.39\",\"Harvest Control Rules\":\"mixed: V-HR\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"WCVI - BARKLEY SOCKEYE SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":\"Uncertain\",\"LRP\":\"GCL: 30000.0 S-R, SPL: 30000.0 S-R, HED: 3500.0 H-SO2\",\"USR\":\"GCL: 200K ESC-MSY, SPL: 150K  ESC-MSY, HED: HAB\",\"RR\":null,\"FRP-L\":\"WCVI - Barkley\\/Somass Sockeye: 170000.0\",\"FRP-U\":\"WCVI - Barkley\\/Somass Sockeye: 700000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"GCL: 0.05\",\"Harvest Control Rules\":\"Harvest decision rules have been developed, implemented and evaluated.They are documented in the Local area management plan at https:\\/\\/www.roundtables.westcoastaquatic.ca\\/area-23-barkley-harvest\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Sockeye\",\"SMU Name\":\"WCVI - OTHER SOCKEYE SALMON\",\"No. Cus\":22,\"Run Timing\":null,\"Freshwater Life History\":\"Lake Type\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"UND\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.05\",\"Harvest Control Rules\":\"Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chinook\",\"SMU Name\":\"WCVI CHINOOK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":\"Peak outmigration is late March to early April, with range from February to June.\",\"Ocean Migration\":\"Far northerly distribution is South East Alaska.\",\"Age at Return\":\"4 years\",\"SMU Status\":\"Critical\",\"LRP\":\"100% of CUs within SMU have WSP status estimates above red\",\"USR\":\"85% SMSY = 16204\",\"RR\":\"43% (IQR: 30\\u201354%)\",\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.65\",\"Harvest Control Rules\":\"Canada allocations are subject to provisions of Chapter 3 of the Pacific Salmon Treaty. Mixed-stock AABM fisheries are managed with a variable harvest rate strategy. There are 3 Aggregate Abundance Based Management (AABM) fisheries: Southeast Alaska (SEAK), Northern BC (NBC), and West Coast Vancouver Island (WCVI). Individual stock-based management\\u2019 (ISBM) fisheries are adaptively managed to achieve national reductions on stock specific exploitation rates, which are specified in the Chinook Chapter.  Within Canada, additional exploitation rate limits on low status SMUs may be implemented through the Integrated Fisheries Mananamgent Plan, requiring secondary management measures, such as time\\u2013area closures, gear limits, etc. In addition, given variation in status among component populations within the WCVI SMU and different levels of hatchery contribution, unique harvest control rules are in place for geographically discrete \\u2018terminal\\u2019 areas on the WCVI.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Chum\",\"SMU Name\":\"WCVI CHUM SALMON\",\"No. Cus\":2,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":\"WCVI Chum mature and return to the terminal area as mainly 3, 4, and 5 year old fish.\",\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-TS\",\"RR\":\"WCVI Chum - Nitinat: 25% when below target fishery reference point\",\"FRP-L\":\"WCVI Chum - Nitinat: 225000.0\",\"FRP-U\":\"WCVI Chum - Nitinat: 325000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.2\",\"Harvest Control Rules\":\"Terminal: F-ER\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Coho\",\"SMU Name\":\"WCVI COHO SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":\"Lake-type sockeye rear along the continental shelf upon entering the ocean in the spring (Tucker et al 2009)\",\"Ocean Migration\":\"Lake-type sockeye reach offshore rearing sites in the Gulf of Alaska by their first winter, following a northwest migration (Tucker et al 2009)\",\"Age at Return\":null,\"SMU Status\":null,\"LRP\":\"H-CO\",\"USR\":\"UND\",\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":\"0.11\",\"Harvest Control Rules\":\"mixed: F-ER, Terminal: UND\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"SOUTH COAST\",\"Species\":\"Pink\",\"SMU Name\":\"WCVI PINK SALMON\",\"No. Cus\":3,\"Run Timing\":null,\"Freshwater Life History\":null,\"Ocean Migration\":null,\"Age at Return\":null,\"SMU Status\":null,\"LRP\":null,\"USR\":null,\"RR\":null,\"FRP-L\":null,\"FRP-U\":null,\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":null,\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chinook\",\"SMU Name\":\"YUKON CHINOOK SALMON\",\"No. Cus\":9,\"Run Timing\":null,\"Freshwater Life History\":\"UPPER YUKON RIVER: Juveniles spend one year rearing in streams and small rivers before outmigration., BIG SALMON: Juveniles spend one year rearing in streams and small rivers before outmigration., NORDENSKIOLD: Juveniles spend one year rearing in streams and small rivers before outmigration., PELLY: Juveniles spend one year rearing in streams and small rivers before outmigration., MIDDLE YUKON RIVER AND TRIBUTARIES: Juveniles spend one year rearing in streams and small rivers before outmigration., STEWART: Juveniles spend one year rearing in streams and small rivers before outmigration., WHITE AND TRIBUTARIES: Juveniles spend one year rearing in streams and small rivers before outmigration., NORTHERN YUKON RIVER AND TRIBUTARIES: Juveniles spend one year rearing in streams and small rivers before outmigration., YUKON RIVER-TESLIN HEADWATERS: Juveniles spend one year rearing in streams and small rivers before outmigration., STEWART: Juvenile upper Yukon Chum salmon emerge from the gravel in April and May. After emergence, they spend little time in the natal area. By mid-June, most have moved away from the spawning areas.\",\"Ocean Migration\":\"Chinook salmon  spend  two to five years in the Bering Sea before returning to their natal spawning grounds.\",\"Age at Return\":\"UPPER YUKON RIVER: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, BIG SALMON: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, NORDENSKIOLD: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, PELLY: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, MIDDLE YUKON RIVER AND TRIBUTARIES: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, STEWART: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, WHITE AND TRIBUTARIES: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, NORTHERN YUKON RIVER AND TRIBUTARIES: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, YUKON RIVER-TESLIN HEADWATERS: Female Chinook salmon age at maturity,and to a lesser extent the proportion of females in the spawning population,has declined overtime. Most Chinook salmon return at age-five or age-six, but some return as age-four or age-seven olds (typically less than, STEWART: Predominant age classes of mature upper Yukon Chum salmon are age-four (62%) and age-five (35%).\",\"SMU Status\":\"Critical\",\"LRP\":\"UND\",\"USR\":\"55000\",\"RR\":\"RR in the healthy zone: All Chinook salmon above 55,000 within Harvest Share limits.  RR in the cautious zone: No harvest when return to Canada below Canadian management objective of 55,000. No RR has been identified for when the stock is in the critical\",\"FRP-L\":\"Yukon Chinook: 48750.0\",\"FRP-U\":\"Yukon Chinook: 55000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Have been developed, implemented and evaluated. RED ZONE (<55,000) No harvest. YELLOW ZONE (55,000+) Limited First Nation harvest only (within Harvest Share agreement with the US). 2023 run size for Canadian-origin Yukon River Chinook was estimated at 15,820. Though run sizes <55,000 indicate no harvest, limited harvests did occur (886 US, 180 Canada). These harvests occurred early in the season, and were incidental harvests occurring in fisheries targeting freshwater species.\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null},{\"Region\":\"YUKON TRANSBOUNDARY\",\"Species\":\"Chum\",\"SMU Name\":\"YUKON CHUM SALMON\",\"No. Cus\":6,\"Run Timing\":null,\"Freshwater Life History\":\"Juvenile upper Yukon Chum salmon emerge from the gravel in April and May. After emergence, they spend little time in the natal area. By mid-June, most have moved away from the spawning areas.\",\"Ocean Migration\":null,\"Age at Return\":\"Predominant age classes of mature upper Yukon Chum salmon are age-four (62%) and age-five (35%).\",\"SMU Status\":null,\"LRP\":\"T-S\",\"USR\":\"ESC-EXP\",\"RR\":null,\"FRP-L\":\"Yukon Chum: 87000.0\",\"FRP-U\":\"Yukon Chum: 104000.0\",\"Avg. Abundance\":null,\"Avg. Catch\":null,\"Avg. ER\":null,\"Harvest Control Rules\":\"Terminal: F-ESC\",\"Hatchery Management Framework\":null,\"Sampling Framework\":null,\"PST Chapter\":null,\"FN Treaty\":null,\"FSP Batch Status\":null}];\n",
       "const allColumns = [\"Region\", \"Species\", \"SMU Name\", \"No. Cus\", \"Run Timing\", \"Freshwater Life History\", \"Ocean Migration\", \"Age at Return\", \"SMU Status\", \"LRP\", \"USR\", \"RR\", \"FRP-L\", \"FRP-U\", \"Avg. Abundance\", \"Avg. Catch\", \"Avg. ER\", \"Harvest Control Rules\", \"Hatchery Management Framework\", \"Sampling Framework\", \"PST Chapter\", \"FN Treaty\", \"FSP Batch Status\"];\n",
       "\n",
       "// Populate species and region filters\n",
       "window.addEventListener('DOMContentLoaded', function() {\n",
       "    const speciesFilter = document.getElementById('speciesFilter');\n",
       "    const regionFilter = document.getElementById('regionFilter');\n",
       "\n",
       "    if (speciesFilter && smuData && smuData.length > 0) {\n",
       "        const species = [...new Set(smuData.map(item => item.Species || item.species).filter(s => s && s !== 'N/A'))].sort();\n",
       "        species.forEach(s => {\n",
       "            const option = document.createElement('option');\n",
       "            option.value = s;\n",
       "            option.textContent = s;\n",
       "            speciesFilter.appendChild(option);\n",
       "        });\n",
       "    }\n",
       "\n",
       "    if (regionFilter && smuData && smuData.length > 0) {\n",
       "        const regions = [...new Set(smuData.map(item => item.Region || item.region).filter(r => r && r !== 'N/A'))].sort();\n",
       "        regions.forEach(r => {\n",
       "            const option = document.createElement('option');\n",
       "            option.value = r;\n",
       "            option.textContent = r;\n",
       "            regionFilter.appendChild(option);\n",
       "        });\n",
       "    }\n",
       "});\n",
       "\n",
       "function filterTable() {\n",
       "    const searchTerm = document.getElementById('searchInput').value.toLowerCase();\n",
       "    const speciesFilter = document.getElementById('speciesFilter').value;\n",
       "    const regionFilter = document.getElementById('regionFilter').value;\n",
       "    const table = document.getElementById('smuTable');\n",
       "    const rows = table.getElementsByTagName('tr');\n",
       "\n",
       "    // Get column indices for Species and Region\n",
       "    const headerRow = table.getElementsByTagName('tr')[0];\n",
       "    const headers = Array.from(headerRow.getElementsByTagName('th')).map(th => th.textContent);\n",
       "    const speciesIndex = headers.findIndex(h => h === 'Species' || h === 'species');\n",
       "    const regionIndex = headers.findIndex(h => h === 'Region' || h === 'region');\n",
       "\n",
       "    for (let i = 1; i < rows.length; i++) {\n",
       "        const row = rows[i];\n",
       "        const cells = row.getElementsByTagName('td');\n",
       "        let showRow = true;\n",
       "\n",
       "        // Search filter\n",
       "        if (searchTerm) {\n",
       "            let found = false;\n",
       "            for (let j = 0; j < cells.length; j++) {\n",
       "                if (cells[j].textContent.toLowerCase().includes(searchTerm)) {\n",
       "                    found = true;\n",
       "                    break;\n",
       "                }\n",
       "            }\n",
       "            if (!found) showRow = false;\n",
       "        }\n",
       "\n",
       "        // Species filter\n",
       "        if (speciesFilter && speciesIndex >= 0 && cells.length > speciesIndex) {\n",
       "            if (cells[speciesIndex].textContent !== speciesFilter) {\n",
       "                showRow = false;\n",
       "            }\n",
       "        }\n",
       "\n",
       "        // Region filter\n",
       "        if (regionFilter && regionIndex >= 0 && cells.length > regionIndex) {\n",
       "            if (cells[regionIndex].textContent !== regionFilter) {\n",
       "                showRow = false;\n",
       "            }\n",
       "        }\n",
       "\n",
       "        row.style.display = showRow ? '' : 'none';\n",
       "    }\n",
       "}\n",
       "\n",
       "function showDetails(index) {\n",
       "    // Safety checks\n",
       "    if (!smuData || smuData.length === 0 || index >= smuData.length || index < 0) {\n",
       "        console.error('Invalid data or index for showDetails');\n",
       "        return;\n",
       "    }\n",
       "\n",
       "    const smu = smuData[index];\n",
       "    const detailView = document.getElementById('detailView');\n",
       "    const detailContent = document.getElementById('detailContent');\n",
       "    const table = document.getElementById('smuTable');\n",
       "\n",
       "    if (!smu || !detailView || !detailContent) return;\n",
       "\n",
       "    let html = `<h2>${smu['SMU Name'] || 'SMU Profile'}</h2>`;\n",
       "\n",
       "    // Basic Information\n",
       "    html += '<div class=\"detail-section\"><h3><i>Basic Information</i></h3><div class=\"info-grid\">';\n",
       "    const basicFields = ['Species', 'Region', 'No. CUs', 'Avg. Abundance', 'Avg. Catch', 'Avg. ER', 'SMU Status', 'PST Chapter', 'FN Treaty', 'FSP Batch Status'];\n",
       "         basicFields.forEach(field => {\n",
       "         if (allColumns.includes(field)) {\n",
       "             html += `<div class=\"info-item\"><label>${field}:</label><span>${smu[field] || 'N/A'}</span></div>`;\n",
       "         }\n",
       "     });\n",
       "    html += '</div><br></div>';\n",
       "\n",
       "    // Life History\n",
       "    html += '<div class=\"detail-section\"><h3><i>Life History</i></h3><div class=\"info-grid\">';\n",
       "    const popFields = ['Run Timing', 'Freshwater Life History', 'Ocean Migration', 'Age at Return'];\n",
       "         popFields.forEach(field => {\n",
       "         if (allColumns.includes(field)) {\n",
       "             html += `<div class=\"info-item\"><label>${field}:</label><span>${smu[field] || 'N/A'}</span></div>`;\n",
       "         }\n",
       "     });\n",
       "    html += '</div><br></div>';\n",
       "\n",
       "    // Management & Harvest\n",
       "    html += '<div class=\"detail-section\"><h3><i>Management & Harvest</i></h3><div class=\"info-grid\">';\n",
       "    const mgmtFields = ['Harvest Control Rules', 'Hatchery Management Framework', 'Sampling Framework'];\n",
       "         mgmtFields.forEach(field => {\n",
       "         if (allColumns.includes(field)) {\n",
       "             html += `<div class=\"info-item\"><label>${field}:</label><span>${smu[field] || 'N/A'}</span></div>`;\n",
       "         }\n",
       "     });\n",
       "    html += '</div><br></div>';\n",
       "\n",
       "    // Reference Points\n",
       "    html += '<div class=\"detail-section\"><h3><i>Reference Points</i></h3><div class=\"info-grid\">';\n",
       "    const addFields = ['LRP', 'USR', 'RR', 'FRP-L', 'FRP-U'];\n",
       "         addFields.forEach(field => {\n",
       "         if (allColumns.includes(field)) {\n",
       "             html += `<div class=\"info-item\"><label>${field}:</label><span>${smu[field] || 'N/A'}</span></div>`;\n",
       "         }\n",
       "     });\n",
       "    html += '</div><br></div>';\n",
       "\n",
       "         //Data Collected\n",
       "     html += '<div class=\"detail-section\"><h3><i>Data Collected</i></h3>';\n",
       "     html += '<table class=\"data-collected-table\">';\n",
       "     html += '<tbody>';\n",
       "     for (let i = 0; i < 3; i++) {\n",
       "         html += '<tr>';\n",
       "         for (let j = 0; j < 5; j++) {\n",
       "             html += '<td>&nbsp;</td>';\n",
       "         }\n",
       "         html += '</tr>';\n",
       "     }\n",
       "     html += '</tbody>';\n",
       "     html += '</table>';\n",
       "     html += '</div>';\n",
       "\n",
       "    // FSAR Assessment\n",
       "    if (smu['FSAR - last assessment'] && smu['FSAR - last assessment'] !== 'N/A') {\n",
       "        html += '<div class=\"detail-section\"><h3><i>FSAR Assessment</i></h3>';\n",
       "        html += `<p><strong>Last Assessment:</strong> <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">${smu['FSAR - last assessment']}</a></p>`;\n",
       "        html += '</div>';\n",
       "    }\n",
       "\n",
       "         // Maps\n",
       "     html += '<div class=\"detail-section\"><h3><i>Maps</i></h3>';\n",
       "     html += '<div class=\"maps-container\">';\n",
       "     const mapTypes = ['FW Spawning', 'Marine Distribution', 'Fishery Impacts'];\n",
       "     mapTypes.forEach(mapType => {\n",
       "         html += `<div class=\"map-item\">`;\n",
       "         html += `<h4>${mapType}</h4>`;\n",
       "         html += `<div class=\"map-placeholder\">`;\n",
       "         html += `<div class=\"map-placeholder-content\">`;\n",
       "         html += `<p>Map Placeholder</p>`;\n",
       "         html += `<p>${mapType} map will be displayed here</p>`;\n",
       "         html += `</div></div></div>`;\n",
       "     });\n",
       "     html += '</div></div>';\n",
       "\n",
       "    detailContent.innerHTML = html;\n",
       "    document.querySelector('.table-wrapper').style.display = 'none';\n",
       "    document.querySelector('.search-controls').style.display = 'none';\n",
       "    detailView.style.display = 'block';\n",
       "}\n",
       "\n",
       "function hideDetails() {\n",
       "    const detailView = document.getElementById('detailView');\n",
       "    const tableWrapper = document.querySelector('.table-wrapper');\n",
       "    const searchControls = document.querySelector('.search-controls');\n",
       "\n",
       "    if (detailView) detailView.style.display = 'none';\n",
       "    if (tableWrapper) tableWrapper.style.display = 'block';\n",
       "    if (searchControls) searchControls.style.display = 'flex';\n",
       "}\n",
       "</script>\n",
       "    "
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create JavaScript data object - always define, even if empty\n",
    "import json\n",
    "\n",
    "if not df.empty:\n",
    "    df_json = df.to_json(orient='records')\n",
    "    columns_list = json.dumps(list(df.columns))\n",
    "else:\n",
    "    df_json = \"[]\"\n",
    "    columns_list = \"[]\"\n",
    "\n",
    "js_code = f\"\"\"\n",
    "<script>\n",
    "const smuData = {df_json};\n",
    "const allColumns = {columns_list};\n",
    "\n",
    "// Populate species and region filters\n",
    "window.addEventListener('DOMContentLoaded', function() {{\n",
    "    const speciesFilter = document.getElementById('speciesFilter');\n",
    "    const regionFilter = document.getElementById('regionFilter');\n",
    "    \n",
    "    if (speciesFilter && smuData && smuData.length > 0) {{\n",
    "        const species = [...new Set(smuData.map(item => item.Species || item.species).filter(s => s && s !== 'N/A'))].sort();\n",
    "        species.forEach(s => {{\n",
    "            const option = document.createElement('option');\n",
    "            option.value = s;\n",
    "            option.textContent = s;\n",
    "            speciesFilter.appendChild(option);\n",
    "        }});\n",
    "    }}\n",
    "    \n",
    "    if (regionFilter && smuData && smuData.length > 0) {{\n",
    "        const regions = [...new Set(smuData.map(item => item.Region || item.region).filter(r => r && r !== 'N/A'))].sort();\n",
    "        regions.forEach(r => {{\n",
    "            const option = document.createElement('option');\n",
    "            option.value = r;\n",
    "            option.textContent = r;\n",
    "            regionFilter.appendChild(option);\n",
    "        }});\n",
    "    }}\n",
    "}});\n",
    "\n",
    "function filterTable() {{\n",
    "    const searchTerm = document.getElementById('searchInput').value.toLowerCase();\n",
    "    const speciesFilter = document.getElementById('speciesFilter').value;\n",
    "    const regionFilter = document.getElementById('regionFilter').value;\n",
    "    const table = document.getElementById('smuTable');\n",
    "    const rows = table.getElementsByTagName('tr');\n",
    "    \n",
    "    // Get column indices for Species and Region\n",
    "    const headerRow = table.getElementsByTagName('tr')[0];\n",
    "    const headers = Array.from(headerRow.getElementsByTagName('th')).map(th => th.textContent);\n",
    "    const speciesIndex = headers.findIndex(h => h === 'Species' || h === 'species');\n",
    "    const regionIndex = headers.findIndex(h => h === 'Region' || h === 'region');\n",
    "    \n",
    "    for (let i = 1; i < rows.length; i++) {{\n",
    "        const row = rows[i];\n",
    "        const cells = row.getElementsByTagName('td');\n",
    "        let showRow = true;\n",
    "        \n",
    "        // Search filter\n",
    "        if (searchTerm) {{\n",
    "            let found = false;\n",
    "            for (let j = 0; j < cells.length; j++) {{\n",
    "                if (cells[j].textContent.toLowerCase().includes(searchTerm)) {{\n",
    "                    found = true;\n",
    "                    break;\n",
    "                }}\n",
    "            }}\n",
    "            if (!found) showRow = false;\n",
    "        }}\n",
    "        \n",
    "        // Species filter\n",
    "        if (speciesFilter && speciesIndex >= 0 && cells.length > speciesIndex) {{\n",
    "            if (cells[speciesIndex].textContent !== speciesFilter) {{\n",
    "                showRow = false;\n",
    "            }}\n",
    "        }}\n",
    "        \n",
    "        // Region filter\n",
    "        if (regionFilter && regionIndex >= 0 && cells.length > regionIndex) {{\n",
    "            if (cells[regionIndex].textContent !== regionFilter) {{\n",
    "                showRow = false;\n",
    "            }}\n",
    "        }}\n",
    "        \n",
    "        row.style.display = showRow ? '' : 'none';\n",
    "    }}\n",
    "}}\n",
    "\n",
    "function showDetails(index) {{\n",
    "    // Safety checks\n",
    "    if (!smuData || smuData.length === 0 || index >= smuData.length || index < 0) {{\n",
    "        console.error('Invalid data or index for showDetails');\n",
    "        return;\n",
    "    }}\n",
    "    \n",
    "    const smu = smuData[index];\n",
    "    const detailView = document.getElementById('detailView');\n",
    "    const detailContent = document.getElementById('detailContent');\n",
    "    const table = document.getElementById('smuTable');\n",
    "    \n",
    "    if (!smu || !detailView || !detailContent) return;\n",
    "    \n",
    "    let html = `<h2>${{smu['SMU Name'] || 'SMU Profile'}}</h2>`;\n",
    "    \n",
    "    // Basic Information\n",
    "    html += '<div class=\"detail-section\"><h3><i>Basic Information</i></h3><div class=\"info-grid\">';\n",
    "    const basicFields = ['Species', 'Region', 'No. CUs', 'Avg. Abundance', 'Avg. Catch', 'Avg. ER', 'SMU Status', 'PST Chapter', 'FN Treaty', 'FSP Batch Status'];\n",
    "         basicFields.forEach(field => {{\n",
    "         if (allColumns.includes(field)) {{\n",
    "             html += `<div class=\"info-item\"><label>${{field}}:</label><span>${{smu[field] || 'N/A'}}</span></div>`;\n",
    "         }}\n",
    "     }});\n",
    "    html += '</div><br></div>';\n",
    "    \n",
    "    // Life History\n",
    "    html += '<div class=\"detail-section\"><h3><i>Life History</i></h3><div class=\"info-grid\">';\n",
    "    const popFields = ['Run Timing', 'Freshwater Life History', 'Ocean Migration', 'Age at Return'];\n",
    "         popFields.forEach(field => {{\n",
    "         if (allColumns.includes(field)) {{\n",
    "             html += `<div class=\"info-item\"><label>${{field}}:</label><span>${{smu[field] || 'N/A'}}</span></div>`;\n",
    "         }}\n",
    "     }});\n",
    "    html += '</div><br></div>';\n",
    "    \n",
    "    // Management & Harvest\n",
    "    html += '<div class=\"detail-section\"><h3><i>Management & Harvest</i></h3><div class=\"info-grid\">';\n",
    "    const mgmtFields = ['Harvest Control Rules', 'Hatchery Management Framework', 'Sampling Framework'];\n",
    "         mgmtFields.forEach(field => {{\n",
    "         if (allColumns.includes(field)) {{\n",
    "             html += `<div class=\"info-item\"><label>${{field}}:</label><span>${{smu[field] || 'N/A'}}</span></div>`;\n",
    "         }}\n",
    "     }});\n",
    "    html += '</div><br></div>';\n",
    "    \n",
    "    // Reference Points\n",
    "    html += '<div class=\"detail-section\"><h3><i>Reference Points</i></h3><div class=\"info-grid\">';\n",
    "    const addFields = ['LRP', 'USR', 'RR', 'FRP-L', 'FRP-U'];\n",
    "         addFields.forEach(field => {{\n",
    "         if (allColumns.includes(field)) {{\n",
    "             html += `<div class=\"info-item\"><label>${{field}}:</label><span>${{smu[field] || 'N/A'}}</span></div>`;\n",
    "         }}\n",
    "     }});\n",
    "    html += '</div><br></div>';\n",
    "\n",
    "         //Data Collected\n",
    "     html += '<div class=\"detail-section\"><h3><i>Data Collected</i></h3>';\n",
    "     html += '<table class=\"data-collected-table\">';\n",
    "     html += '<tbody>';\n",
    "     for (let i = 0; i < 3; i++) {{\n",
    "         html += '<tr>';\n",
    "         for (let j = 0; j < 5; j++) {{\n",
    "             html += '<td>&nbsp;</td>';\n",
    "         }}\n",
    "         html += '</tr>';\n",
    "     }}\n",
    "     html += '</tbody>';\n",
    "     html += '</table>';\n",
    "     html += '</div>';\n",
    "    \n",
    "    // FSAR Assessment\n",
    "    if (smu['FSAR - last assessment'] && smu['FSAR - last assessment'] !== 'N/A') {{\n",
    "        html += '<div class=\"detail-section\"><h3><i>FSAR Assessment</i></h3>';\n",
    "        html += `<p><strong>Last Assessment:</strong> <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">${{smu['FSAR - last assessment']}}</a></p>`;\n",
    "        html += '</div>';\n",
    "    }}\n",
    "\n",
    "         // Maps\n",
    "     html += '<div class=\"detail-section\"><h3><i>Maps</i></h3>';\n",
    "     html += '<div class=\"maps-container\">';\n",
    "     const mapTypes = ['FW Spawning', 'Marine Distribution', 'Fishery Impacts'];\n",
    "     mapTypes.forEach(mapType => {{\n",
    "         html += `<div class=\"map-item\">`;\n",
    "         html += `<h4>${{mapType}}</h4>`;\n",
    "         html += `<div class=\"map-placeholder\">`;\n",
    "         html += `<div class=\"map-placeholder-content\">`;\n",
    "         html += `<p>Map Placeholder</p>`;\n",
    "         html += `<p>${{mapType}} map will be displayed here</p>`;\n",
    "         html += `</div></div></div>`;\n",
    "     }});\n",
    "     html += '</div></div>';\n",
    "    \n",
    "    detailContent.innerHTML = html;\n",
    "    document.querySelector('.table-wrapper').style.display = 'none';\n",
    "    document.querySelector('.search-controls').style.display = 'none';\n",
    "    detailView.style.display = 'block';\n",
    "}}\n",
    "\n",
    "function hideDetails() {{\n",
    "    const detailView = document.getElementById('detailView');\n",
    "    const tableWrapper = document.querySelector('.table-wrapper');\n",
    "    const searchControls = document.querySelector('.search-controls');\n",
    "    \n",
    "    if (detailView) detailView.style.display = 'none';\n",
    "    if (tableWrapper) tableWrapper.style.display = 'block';\n",
    "    if (searchControls) searchControls.style.display = 'flex';\n",
    "}}\n",
    "</script>\n",
    "    \"\"\"\n",
    "\n",
    "display(HTML(js_code))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3523e6d",
   "metadata": {},
   "source": [
    "## Data Export"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e69c7542",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"export-section\">\n",
       "    <h3>Export Data</h3>\n",
       "    <button onclick=\"exportToCSV()\" class=\"export-button\">Download as CSV</button>\n",
       "</div>\n",
       "\n",
       "<script>\n",
       "function exportToCSV() {\n",
       "    const headers = allColumns;\n",
       "    let csvContent = headers.join(',') + '\\n';\n",
       "\n",
       "    smuData.forEach(row => {\n",
       "        const values = headers.map(header => {\n",
       "            const value = row[header] || '';\n",
       "            return '\"' + String(value).replace(/\"/g, '\"\"') + '\"';\n",
       "        });\n",
       "        csvContent += values.join(',') + '\\n';\n",
       "    });\n",
       "\n",
       "    const blob = new Blob([csvContent], { type: 'text/csv' });\n",
       "    const url = window.URL.createObjectURL(blob);\n",
       "    const a = document.createElement('a');\n",
       "    a.href = url;\n",
       "    a.download = 'smu_profiles.csv';\n",
       "    document.body.appendChild(a);\n",
       "    a.click();\n",
       "    document.body.removeChild(a);\n",
       "    window.URL.revokeObjectURL(url);\n",
       "}\n",
       "</script>\n",
       "    "
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if not df.empty:\n",
    "    display(HTML(\"\"\"\n",
    "<div class=\"export-section\">\n",
    "    <h3>Export Data</h3>\n",
    "    <button onclick=\"exportToCSV()\" class=\"export-button\">Download as CSV</button>\n",
    "</div>\n",
    "\n",
    "<script>\n",
    "function exportToCSV() {\n",
    "    const headers = allColumns;\n",
    "    let csvContent = headers.join(',') + '\\\\n';\n",
    "    \n",
    "    smuData.forEach(row => {\n",
    "        const values = headers.map(header => {\n",
    "            const value = row[header] || '';\n",
    "            return '\"' + String(value).replace(/\"/g, '\"\"') + '\"';\n",
    "        });\n",
    "        csvContent += values.join(',') + '\\\\n';\n",
    "    });\n",
    "    \n",
    "    const blob = new Blob([csvContent], { type: 'text/csv' });\n",
    "    const url = window.URL.createObjectURL(blob);\n",
    "    const a = document.createElement('a');\n",
    "    a.href = url;\n",
    "    a.download = 'smu_profiles.csv';\n",
    "    document.body.appendChild(a);\n",
    "    a.click();\n",
    "    document.body.removeChild(a);\n",
    "    window.URL.revokeObjectURL(url);\n",
    "}\n",
    "</script>\n",
    "    \"\"\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecb725a9",
   "metadata": {},
   "source": [
    "## Summary Statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dd74d4b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 588,
       "width": 990
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "if not df.empty:\n",
    "    # Create summary visualizations if possible\n",
    "    import matplotlib.pyplot as plt\n",
    "    import seaborn as sns\n",
    "    \n",
    "    # Set style\n",
    "    plt.style.use('default')\n",
    "    sns.set_palette(\"husl\")\n",
    "    \n",
    "    # Species distribution\n",
    "    if 'Species' in df.columns:\n",
    "        fig, ax = plt.subplots(figsize=(10, 6))\n",
    "        species_counts = df['Species'].value_counts()\n",
    "        species_counts.plot(kind='bar', ax=ax)\n",
    "        ax.set_title('Distribution of SMUs by Species')\n",
    "        ax.set_xlabel('Species')\n",
    "        ax.set_ylabel('Number of SMUs')\n",
    "        plt.xticks(rotation=45)\n",
    "        plt.tight_layout()\n",
    "        plt.show()\n",
    "    \n",
    "    # Status distribution if available\n",
    "    status_col = 'Status / Trend (last assessment)'\n",
    "    if status_col in df.columns:\n",
    "        status_counts = df[status_col].value_counts()\n",
    "        if len(status_counts) > 1:\n",
    "            fig, ax = plt.subplots(figsize=(8, 6))\n",
    "            status_counts.plot(kind='pie', ax=ax, autopct='%1.1f%%')\n",
    "            ax.set_title('SMU Status Distribution')\n",
    "            ax.set_ylabel('')\n",
    "            plt.tight_layout()\n",
    "            plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "C:\\Users\\ElinsonM\\AppData\\Local\\Programs\\Python\\Python313\\share\\jupyter\\kernels\\python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
